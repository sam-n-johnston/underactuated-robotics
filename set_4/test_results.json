{
    "execution_time": "11.42", 
    "tests": [
        {
            "output": "('Success', True)\n('Final position', array([ 2.00472467,  0.03915305,  0.95590137, -0.21412281]))\n('Final distance to world2', 0.50000000000048428)\n('Final speed', 0.98010000000637865)\n('Fuel consumption', 10.751850653271079)\n('Success', True)\n('Final position', array([ 2.25948594, -0.33721046,  0.35882647,  0.91150402]))\n('Final distance to world2', 0.50000000000155431)\n('Final speed', 0.98010000008110687)\n('Fuel consumption', 44.832634944920201)\n('Success', True)\n('Final position', array([ 2.01310719, -0.0092492 ,  0.87833768,  0.43372679]))\n('Final distance to world2', 0.50000000000020661)\n('Final speed', 0.98010000004247211)\n('Fuel consumption', 116.66408933973082)\n('Success', True)\n('Final position', array([ 2.30430639, -0.35902507,  0.23911439,  0.94995806]))\n('Final distance to world2', 0.50000000000021738)\n('Final speed', 0.98010000000194009)\n('Fuel consumption', 18.109376635697373)\n", 
            "score": 1, 
            "max_score": 1, 
            "name": "Run a few trajectory optimizations once, and persist the output"
        }, 
        {
            "score": 4, 
            "max_score": 4, 
            "name": "Check that the system approximately obeys the original dynamics"
        }, 
        {
            "output": "Test Failed: One of the tested trajectories caused the rocket to run out of fuel when testing                     x0 = [-2.   0.5 -0.4  0. ]\n", 
            "score": 0.0, 
            "max_score": 4, 
            "name": "Check that the trajectory was reasonably efficient with fuel use"
        }, 
        {
            "score": 10, 
            "max_score": 10, 
            "name": "Check that the initial state is valid"
        }, 
        {
            "score": 1, 
            "max_score": 1, 
            "name": "Check that the original parameters have not been changed"
        }, 
        {
            "output": "test1\n[ 2.00472467  0.03915305]\n0.249\ntest2\n0.000999999999516\ntest1\n[ 2.25948594 -0.33721046]\n0.249000000002\ntest2\n0.000999999998446\ntest1\n[ 2.01310719 -0.0092492 ]\n0.249\ntest2\n0.000999999999793\ntest1\n[ 2.30430639 -0.35902507]\n0.249\ntest2\n0.000999999999783\n", 
            "score": 10, 
            "max_score": 10, 
            "name": "Check that the trajectory satisfied the specified 'orbit' constraint"
        }, 
        {
            "score": 4, 
            "max_score": 4, 
            "name": "Check that the time_array is valid"
        }, 
        {
            "output": "\n/notebooks/hopper_2d.py:276: DrakeDeprecationWarning: Use get_state_output_port() instead\n    Please see `help(pydrake.common.deprecation)` for more information.\n  builder.Connect(plant.get_continuous_state_output_port(), state_log.get_input_port(0))\n", 
            "score": 10, 
            "max_score": 10, 
            "name": "Verify that the hopper keeps hopping for 10s"
        }, 
        {
            "score": 5, 
            "max_score": 5, 
            "name": "Verify that the hopper tracks a desired lateral velocity"
        }, 
        {
            "score": 5, 
            "max_score": 5, 
            "name": "Verify that the hopper stabilizes both hopping and theta"
        }, 
        {
            "score": 1, 
            "max_score": 1, 
            "name": "Verify the signature of ChooseThighTorque"
        }
    ], 
    "score": 51.0, 
    "leaderboard": []
}
